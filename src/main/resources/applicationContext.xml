<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!-- step：1 自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean -->
    <mvc:annotation-driven/>

    <!-- step：2 过滤访问任何位置静态页面的请求，与最后的resource配置目的一样 -->
    <mvc:default-servlet-handler/>

    <!-- step：3 配置JSP 显示ViewResolver-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- step：4 扫描web相关的bean-->
    <context:component-scan base-package="com.zzx.controller"/>

    <!--和<mvc:default-servlet-handler/>处理静态资源效果一样-->
    <!--<mvc:resources mapping="/**/*.html" location="/,classpath:/META-INF/page/"/>-->
    <!--<mvc:resources mapping="/**/*.js" location="/,classpath:/META-INF/page/"/>-->
    <!--<mvc:resources mapping="/**/*.css" location="/,classpath:/META-INF/page/"/>-->
    <!--<mvc:resources mapping="/**/*.png" location="/,classpath:/META-INF/page/"/>-->
    <!--<mvc:resources mapping="/**/*.gif" location="/,classpath:/META-INF/page/"/>-->


    <!-- 启用缓存注解功能 -->
    <cache:annotation-driven cache-manager="cacheManager"/>
    <!-- spring提供的基于的ehcache实现的缓存管理器 -->
    <bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:ehcache.xml"/>
    </bean>
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="cacheManagerFactory"/>
    </bean>

</beans>